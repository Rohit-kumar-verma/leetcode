class Solution {
public:
    vector<vector<int>> ans;
    vector<int> curr;
    
    void function(vector<int>& candidates,int target,int i){
        
        if(target==0){ 
            ans.push_back(curr);
            return;
            }
        
        if(i==candidates.size() || target<0) return ;
        
        curr.push_back(candidates[i]);
        function(candidates,target-candidates[i],i);
        
        curr.pop_back();                     //backtracking
        function(candidates,target,i+1);
        
    }
    
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        function(candidates,target,0);
        return ans;
    }
};


